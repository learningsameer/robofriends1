{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAiBeA,EAfH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAE1B,OAEC,cADA,CACA,OAAKC,UAAW,oDAAhB,UACC,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,mBACtB,gCACC,6BAAKF,IACL,4BAAIC,WCiBOK,EAxBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAKhB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCCGC,EAbE,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aAClB,OACC,qBAAKT,UAAW,MAAhB,SACC,uBACCA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,EATD,SAACC,GACd,OACC,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACEJ,EAAMK,YCqBKC,E,kDAvBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAM,CACVC,UAAS,GAHO,E,8DAQAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAKxB,OAAGG,KAAKJ,MAAMC,SACN,6DAEDG,KAAKX,MAAMK,a,GAlBQQ,aCmEbC,G,wDAxDd,aAAc,IAAD,8BACZ,gBAQDC,eAAgB,SAACC,GAChB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SARzC,EAAKZ,MAAM,CACVjB,OAAQ,GACR2B,YAAa,KAJF,E,gEAkBO,IAAD,OAElBG,MAAM,6CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKZ,SAAS,CAACtB,OAAOkC,S,+BAI7B,MAEsBb,KAAKJ,MAA3BjB,EAFA,EAEAA,OAAQ2B,EAFR,EAEQA,YACTQ,EAAenC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAYW,kBAGrD,OAAItC,EAAOwC,OAKT,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQmC,WATf,oBAAIvC,UAAU,KAAd,0B,GAnCQ2B,cCAHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,SAK/CX,M","file":"static/js/main.6b96eb93.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card =({name, email, id})=>{\r\n\t// const {name, email, id} =props;\r\n\treturn (\r\n\t\t// <h1> Robofriends</h1> error as we only return one element.\r\n\t\t<div className =\"bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n\t\t\t<img alt =\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList=({robots})=>{\r\n\t// const CardComponent =\r\n\t// if(true){\r\n\t// \tthrow new Error('Nooooo!!')\r\n\t// }\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\t\t\t\r\n\t\t\t\trobots.map((user, i)=>{\r\n\t\t\t\t\treturn( \r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t)\t\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchChange})=>{\r\n\treturn(\r\n\t\t<div className =\"pa2\">\r\n\t\t\t<input \r\n\t\t\t className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t type=\"search\" \r\n\t\t\t placeholder=\"Search Robots\"\r\n\t\t\t onChange={searchChange}\r\n\t\t\t />\r\n\t\t </div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll =(props)=>{\r\n\treturn(\r\n\t\t<div style={{overflowY:'scroll', border:'1px solid black', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true})\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1> Oooops This is not good!! </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundary;\r\n","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css'\r\n\r\n// const state={\r\n// \trobots: robots,\r\n// \tsearchfield: \"\",\r\n// }\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: \" \",\r\n\t\t}\r\n\t\t// console.log(\"constructor\");\r\n\t}\r\n\r\n\tonSearchChange= (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\t// console.log(event.target.value);\r\n\t\t// const filteredRobots=this.state.robots.filter(robot=>{\r\n\t\t// \treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\t\t\t\r\n\t\t// \t});\r\n\t\t// console.log(filteredRobots);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\t// console.log(\"componentDidMount\");\r\n\t\tfetch('http://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users=>this.setState({robots:users}));\r\n\t\t\r\n\t}\r\n\r\n\trender(){\r\n\t\t// destructuring to remove this.state.\r\n\t\tconst {robots, searchfield }=this.state;\r\n\t\tconst filteredRobots=robots.filter(robot=>{\r\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\t\t\t\r\n\t\t});\r\n\t\t\t// console.log(\"render\");\r\n\t\tif(!robots.length){\r\n\t\t\treturn <h1 className=\"tc\"> Loading</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tc\">\r\n\t\t\t\t\t<h1 className=\"f1\"> Robo Friends </h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t\t\r\n\r\n\t}\r\n\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport App from './containers/App';\n// import Card from './Card.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}